{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katas\\\\BlockChainProject\\\\expense-splitter-dapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport CreateGroup from \"./views/CreateGroup\";\nimport AddExpense from \"./views/AddExpense\";\nimport GroupSummary from \"./views/GroupSummary\";\nimport GroupSelector from \"./components/GroupSelector\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [signer, setSigner] = useState(null);\n  const [view, setView] = useState(\"home\");\n  const [selectedGroupId, setSelectedGroupId] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [signer && view === \"create\" && /*#__PURE__*/_jsxDEV(CreateGroup, {\n      setGroupId: setSelectedGroupId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), signer && view === \"add\" && selectedGroupId && /*#__PURE__*/_jsxDEV(AddExpense, {\n      groupId: selectedGroupId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), signer && view === \"home\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GroupSelector, {\n        onSelect: setSelectedGroupId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), selectedGroupId ? /*#__PURE__*/_jsxDEV(GroupSummary, {\n        groupId: selectedGroupId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center mt-5\",\n        children: \"Please select a group to get started.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9yeFASH1H/QfdyTbvUXqpqlIqUU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","CreateGroup","AddExpense","GroupSummary","GroupSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","signer","setSigner","view","setView","selectedGroupId","setSelectedGroupId","className","children","setGroupId","fileName","_jsxFileName","lineNumber","columnNumber","groupId","onSelect","_c","$RefreshReg$"],"sources":["C:/Users/katas/BlockChainProject/expense-splitter-dapp/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport CreateGroup from \"./views/CreateGroup\";\nimport AddExpense from \"./views/AddExpense\";\nimport GroupSummary from \"./views/GroupSummary\";\nimport GroupSelector from \"./components/GroupSelector\";\n\nfunction App() {\n  const [signer, setSigner] = useState(null);\n  const [view, setView] = useState(\"home\");\n  const [selectedGroupId, setSelectedGroupId] = useState(null);\n\n  return (\n    <div className=\"container\">\n\n\n      {signer && view === \"create\" && (\n        <CreateGroup setGroupId={setSelectedGroupId} />\n      )}\n\n      {signer && view === \"add\" && selectedGroupId && (\n        <AddExpense groupId={selectedGroupId} />\n      )}\n\n      {signer && view === \"home\" && (\n        <>\n          <GroupSelector onSelect={setSelectedGroupId} />\n          {selectedGroupId ? (\n            <GroupSummary groupId={selectedGroupId} />\n          ) : (\n            <p className=\"text-center mt-5\">\n              Please select a group to get started.\n            </p>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,MAAM,CAAC;EACxC,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE5D,oBACEO,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,GAGvBP,MAAM,IAAIE,IAAI,KAAK,QAAQ,iBAC1BP,OAAA,CAACL,WAAW;MAACkB,UAAU,EAAEH;IAAmB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC/C,EAEAZ,MAAM,IAAIE,IAAI,KAAK,KAAK,IAAIE,eAAe,iBAC1CT,OAAA,CAACJ,UAAU;MAACsB,OAAO,EAAET;IAAgB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACxC,EAEAZ,MAAM,IAAIE,IAAI,KAAK,MAAM,iBACxBP,OAAA,CAAAE,SAAA;MAAAU,QAAA,gBACEZ,OAAA,CAACF,aAAa;QAACqB,QAAQ,EAAET;MAAmB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC9CR,eAAe,gBACdT,OAAA,CAACH,YAAY;QAACqB,OAAO,EAAET;MAAgB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE1CjB,OAAA;QAAGW,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAEhC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACJ;IAAA,eACD,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACb,EAAA,CA/BQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}