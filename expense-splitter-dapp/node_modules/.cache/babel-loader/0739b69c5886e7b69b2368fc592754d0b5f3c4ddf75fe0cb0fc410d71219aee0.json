{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katas\\\\BlockChainProject\\\\expense-splitter-dapp\\\\src\\\\views\\\\GroupSummary.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GroupSummary({\n  groupId\n}) {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [balances, setBalances] = useState({});\n  useEffect(() => {\n    const load = async () => {\n      const expRes = await fetch(`http://localhost:5000/api/expenses/group/${groupId}`);\n      const balRes = await fetch(`http://localhost:5000/api/expenses/group/${groupId}/balance`);\n      setExpenses(await expRes.json());\n      setBalances(await balRes.json());\n    };\n    load();\n  }, [groupId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Expense History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group mb-4\",\n      children: expenses.map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: e.paidBy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), \" paid \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [e.amount, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 46\n        }, this), \" for \\\"\", e.description, \"\\\"\"]\n      }, e.expenseId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Balances\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: Object.entries(balances).map(([addr, amt]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: addr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), \": \", amt.toFixed(4), \" ETH\"]\n      }, addr, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(GroupSummary, \"ge2aeu6zog7QLJcwSEZDponT834=\");\n_c = GroupSummary;\nvar _c;\n$RefreshReg$(_c, \"GroupSummary\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","GroupSummary","groupId","_s","expenses","setExpenses","balances","setBalances","load","expRes","fetch","balRes","json","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","e","paidBy","amount","description","expenseId","Object","entries","addr","amt","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/katas/BlockChainProject/expense-splitter-dapp/src/views/GroupSummary.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function GroupSummary({ groupId }) {\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [balances, setBalances] = useState({});\r\n\r\n  useEffect(() => {\r\n    const load = async () => {\r\n      const expRes = await fetch(`http://localhost:5000/api/expenses/group/${groupId}`);\r\n      const balRes = await fetch(`http://localhost:5000/api/expenses/group/${groupId}/balance`);\r\n      setExpenses(await expRes.json());\r\n      setBalances(await balRes.json());\r\n    };\r\n    load();\r\n  }, [groupId]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Expense History</h3>\r\n      <ul className=\"list-group mb-4\">\r\n        {expenses.map((e) => (\r\n          <li className=\"list-group-item\" key={e.expenseId}>\r\n            <strong>{e.paidBy}</strong> paid <strong>{e.amount} ETH</strong> for \"{e.description}\"\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h3>Balances</h3>\r\n      <ul className=\"list-group\">\r\n        {Object.entries(balances).map(([addr, amt]) => (\r\n          <li className=\"list-group-item\" key={addr}>\r\n            <strong>{addr}</strong>: {amt.toFixed(4)} ETH\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}