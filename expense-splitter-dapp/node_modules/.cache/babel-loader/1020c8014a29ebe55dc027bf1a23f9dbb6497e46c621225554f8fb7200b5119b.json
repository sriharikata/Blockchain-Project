{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katas\\\\BlockChainProject\\\\expense-splitter-dapp\\\\src\\\\components\\\\ConnectWallet.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { BrowserProvider, formatEther } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ConnectWallet({\n  setSigner\n}) {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(\"0\");\n  const connect = async () => {\n    if (window.ethereum) {\n      const provider = new BrowserProvider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = await provider.getSigner();\n      setSigner(signer);\n      const addr = await signer.getAddress();\n      setAccount(addr);\n      const bal = await provider.getBalance(addr);\n      setBalance(formatEther(bal));\n    } else {\n      alert(\"Please install MetaMask\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-end my-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary me-2\",\n      onClick: connect,\n      children: account ? `Connected: ${account.slice(0, 6)}...` : \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), account && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"\\uD83D\\uDCB0 \", balance, \" ETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(ConnectWallet, \"QHd7XJeOn6WicOrXCqTm9jyldCM=\");\n_c = ConnectWallet;\nvar _c;\n$RefreshReg$(_c, \"ConnectWallet\");","map":{"version":3,"names":["useState","useEffect","BrowserProvider","formatEther","jsxDEV","_jsxDEV","ConnectWallet","setSigner","_s","account","setAccount","balance","setBalance","connect","window","ethereum","provider","send","signer","getSigner","addr","getAddress","bal","getBalance","alert","className","children","onClick","slice","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/katas/BlockChainProject/expense-splitter-dapp/src/components/ConnectWallet.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { BrowserProvider, formatEther } from \"ethers\";\r\n\r\nexport default function ConnectWallet({ setSigner }) {\r\n    const [account, setAccount] = useState(null);\r\n    const [balance, setBalance] = useState(\"0\");\r\n\r\n    const connect = async () => {\r\n        if (window.ethereum) {\r\n            const provider = new BrowserProvider(window.ethereum);\r\n            await provider.send(\"eth_requestAccounts\", []);\r\n            const signer = await provider.getSigner();\r\n            setSigner(signer);\r\n            const addr = await signer.getAddress();\r\n            setAccount(addr);\r\n\r\n            const bal = await provider.getBalance(addr);\r\n            setBalance(formatEther(bal));\r\n        } else {\r\n            alert(\"Please install MetaMask\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"text-end my-3\">\r\n            <button className=\"btn btn-primary me-2\" onClick={connect}>\r\n                {account ? `Connected: ${account.slice(0, 6)}...` : \"Connect Wallet\"}\r\n            </button>\r\n            {account && <span>ðŸ’° {balance} ETH</span>}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,eAAe,EAAEC,WAAW,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,aAAaA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,GAAG,CAAC;EAE3C,MAAMa,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACjB,MAAMC,QAAQ,GAAG,IAAId,eAAe,CAACY,MAAM,CAACC,QAAQ,CAAC;MACrD,MAAMC,QAAQ,CAACC,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;MAC9C,MAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,SAAS,CAAC,CAAC;MACzCZ,SAAS,CAACW,MAAM,CAAC;MACjB,MAAME,IAAI,GAAG,MAAMF,MAAM,CAACG,UAAU,CAAC,CAAC;MACtCX,UAAU,CAACU,IAAI,CAAC;MAEhB,MAAME,GAAG,GAAG,MAAMN,QAAQ,CAACO,UAAU,CAACH,IAAI,CAAC;MAC3CR,UAAU,CAACT,WAAW,CAACmB,GAAG,CAAC,CAAC;IAChC,CAAC,MAAM;MACHE,KAAK,CAAC,yBAAyB,CAAC;IACpC;EACJ,CAAC;EAED,oBACInB,OAAA;IAAKoB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BrB,OAAA;MAAQoB,SAAS,EAAC,sBAAsB;MAACE,OAAO,EAAEd,OAAQ;MAAAa,QAAA,EACrDjB,OAAO,GAAG,cAAcA,OAAO,CAACmB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC,EACRvB,OAAO,iBAAIJ,OAAA;MAAAqB,QAAA,GAAM,eAAG,EAACf,OAAO,EAAC,MAAI;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEd;AAACxB,EAAA,CA5BuBF,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}