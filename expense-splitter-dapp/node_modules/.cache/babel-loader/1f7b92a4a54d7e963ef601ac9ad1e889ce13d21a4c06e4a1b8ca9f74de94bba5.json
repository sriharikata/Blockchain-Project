{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katas\\\\BlockChainProject\\\\expense-splitter-dapp\\\\src\\\\views\\\\AddExpense.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { BrowserProvider } from \"ethers\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddExpense({\n  setView\n}) {\n  _s();\n  const [allGroups, setAllGroups] = useState([]);\n  const [selectedGroupId, setSelectedGroupId] = useState(\"\");\n  const [group, setGroup] = useState(null);\n  const [paidBy, setPaidBy] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [splitType, setSplitType] = useState(\"equal\");\n  const [splitDetails, setSplitDetails] = useState({});\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const loadGroups = async () => {\n      // const res = await fetch(\"http://localhost:5000/api/groups\");\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/api/groups`);\n      const data = await res.json();\n      setAllGroups(data);\n    };\n    loadGroups();\n  }, []);\n  useEffect(() => {\n    const selected = allGroups.find(g => g.groupId === selectedGroupId);\n    if (selected) {\n      setGroup(selected);\n      const initialSplit = {};\n      selected.members.forEach(m => {\n        initialSplit[m.address] = \"\";\n      });\n      setSplitDetails(initialSplit);\n    }\n  }, [selectedGroupId, allGroups]);\n  useEffect(() => {\n    const fetchConnectedWallet = async () => {\n      try {\n        const provider = new BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        const addr = await signer.getAddress();\n        const match = group === null || group === void 0 ? void 0 : group.members.find(m => m.address.toLowerCase() === addr.toLowerCase());\n        setPaidBy(match ? match.address : addr);\n      } catch (err) {\n        console.error(\"Auto-fill wallet failed\", err);\n      }\n    };\n    if (group) fetchConnectedWallet();\n  }, [group]);\n  const calculateEqualSplit = () => {\n    if (!group || !amount) return {};\n    const perPerson = parseFloat(amount) / group.members.length;\n    const result = {};\n    group.members.forEach(m => {\n      result[m.address] = perPerson.toFixed(4);\n    });\n    return result;\n  };\n  const handleSplitChange = (address, value) => {\n    setSplitDetails(prev => ({\n      ...prev,\n      [address]: value\n    }));\n  };\n  const handleSubmit = async () => {\n    setError(\"\");\n    const total = parseFloat(amount);\n    const splitBetween = splitType === \"equal\" ? Object.keys(calculateEqualSplit()) : Object.keys(splitDetails).filter(addr => parseFloat(splitDetails[addr]) > 0);\n    const finalSplit = splitType === \"equal\" ? calculateEqualSplit() : splitDetails;\n\n    // ✅ Manual Split Validation\n    if (splitType === \"manual\") {\n      const totalSplit = Object.values(finalSplit).reduce((sum, v) => sum + parseFloat(v || 0), 0);\n      if (Math.abs(total - totalSplit) > 0.0001) {\n        setError(`Total split (${totalSplit.toFixed(4)} ETH) does not match entered amount (${total} ETH).`);\n        return;\n      }\n    }\n    const payload = {\n      groupId: selectedGroupId,\n      paidBy,\n      amount: total,\n      description,\n      splitBetween,\n      splitDetails: finalSplit\n    };\n\n    // const res = await fetch(\"http://localhost:5000/api/expenses\", {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(payload)\n    // });\n\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/api/expenses`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    });\n    const data = await res.json();\n    if (data.expenseId) {\n      alert(\"✅ Expense added!\");\n      setView(\"dashboard\"); // 🔁 Redirect after success\n    } else {\n      alert(\"❌ Failed to add expense\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Group:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        value: selectedGroupId,\n        onChange: e => setSelectedGroupId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select a Group --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), allGroups.map(g => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: g.groupId,\n          children: g.groupName\n        }, g.groupId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), group && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Paid By (Your Wallet Address):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          value: paidBy,\n          onChange: e => setPaidBy(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount in ETH:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          value: amount,\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Split Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-select\",\n          value: splitType,\n          onChange: e => setSplitType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"equal\",\n            children: \"Equal Split\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"manual\",\n            children: \"Manual Split\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Split Between:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), group.members.map((m, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: m.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this), \" (\", m.address.slice(0, 6), \"...\", m.address.slice(-4), \")\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control mt-1\",\n            disabled: splitType === \"equal\",\n            value: splitType === \"equal\" ? calculateEqualSplit()[m.address] : splitDetails[m.address],\n            onChange: e => handleSplitChange(m.address, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleSubmit,\n        children: \"Submit Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(AddExpense, \"ZWtJD0BwW1Oz79GVItuf/m/9eKc=\");\n_c = AddExpense;\nvar _c;\n$RefreshReg$(_c, \"AddExpense\");","map":{"version":3,"names":["useEffect","useState","BrowserProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","AddExpense","setView","_s","allGroups","setAllGroups","selectedGroupId","setSelectedGroupId","group","setGroup","paidBy","setPaidBy","description","setDescription","amount","setAmount","splitType","setSplitType","splitDetails","setSplitDetails","error","setError","loadGroups","res","fetch","process","env","REACT_APP_API_URL","data","json","selected","find","g","groupId","initialSplit","members","forEach","m","address","fetchConnectedWallet","provider","window","ethereum","signer","getSigner","addr","getAddress","match","toLowerCase","err","console","calculateEqualSplit","perPerson","parseFloat","length","result","toFixed","handleSplitChange","value","prev","handleSubmit","total","splitBetween","Object","keys","filter","finalSplit","totalSplit","values","reduce","sum","v","Math","abs","payload","method","headers","body","JSON","stringify","expenseId","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","map","groupName","idx","name","slice","type","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/katas/BlockChainProject/expense-splitter-dapp/src/views/AddExpense.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { BrowserProvider } from \"ethers\";\r\n\r\nexport default function AddExpense({ setView }) {\r\n  const [allGroups, setAllGroups] = useState([]);\r\n  const [selectedGroupId, setSelectedGroupId] = useState(\"\");\r\n  const [group, setGroup] = useState(null);\r\n\r\n  const [paidBy, setPaidBy] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [splitType, setSplitType] = useState(\"equal\");\r\n  const [splitDetails, setSplitDetails] = useState({});\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const loadGroups = async () => {\r\n      // const res = await fetch(\"http://localhost:5000/api/groups\");\r\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/api/groups`);\r\n      const data = await res.json();\r\n      setAllGroups(data);\r\n    };\r\n    loadGroups();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selected = allGroups.find((g) => g.groupId === selectedGroupId);\r\n    if (selected) {\r\n      setGroup(selected);\r\n      const initialSplit = {};\r\n      selected.members.forEach((m) => {\r\n        initialSplit[m.address] = \"\";\r\n      });\r\n      setSplitDetails(initialSplit);\r\n    }\r\n  }, [selectedGroupId, allGroups]);\r\n\r\n  useEffect(() => {\r\n    const fetchConnectedWallet = async () => {\r\n      try {\r\n        const provider = new BrowserProvider(window.ethereum);\r\n        const signer = await provider.getSigner();\r\n        const addr = await signer.getAddress();\r\n        const match = group?.members.find((m) => m.address.toLowerCase() === addr.toLowerCase());\r\n        setPaidBy(match ? match.address : addr);\r\n      } catch (err) {\r\n        console.error(\"Auto-fill wallet failed\", err);\r\n      }\r\n    };\r\n\r\n    if (group) fetchConnectedWallet();\r\n  }, [group]);\r\n\r\n  const calculateEqualSplit = () => {\r\n    if (!group || !amount) return {};\r\n    const perPerson = parseFloat(amount) / group.members.length;\r\n    const result = {};\r\n    group.members.forEach((m) => {\r\n      result[m.address] = perPerson.toFixed(4);\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const handleSplitChange = (address, value) => {\r\n    setSplitDetails((prev) => ({\r\n      ...prev,\r\n      [address]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    setError(\"\");\r\n\r\n    const total = parseFloat(amount);\r\n    const splitBetween =\r\n      splitType === \"equal\"\r\n        ? Object.keys(calculateEqualSplit())\r\n        : Object.keys(splitDetails).filter((addr) => parseFloat(splitDetails[addr]) > 0);\r\n\r\n    const finalSplit =\r\n      splitType === \"equal\" ? calculateEqualSplit() : splitDetails;\r\n\r\n    // ✅ Manual Split Validation\r\n    if (splitType === \"manual\") {\r\n      const totalSplit = Object.values(finalSplit).reduce(\r\n        (sum, v) => sum + parseFloat(v || 0), 0\r\n      );\r\n\r\n      if (Math.abs(total - totalSplit) > 0.0001) {\r\n        setError(`Total split (${totalSplit.toFixed(4)} ETH) does not match entered amount (${total} ETH).`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    const payload = {\r\n      groupId: selectedGroupId,\r\n      paidBy,\r\n      amount: total,\r\n      description,\r\n      splitBetween,\r\n      splitDetails: finalSplit\r\n    };\r\n\r\n    // const res = await fetch(\"http://localhost:5000/api/expenses\", {\r\n    //   method: \"POST\",\r\n    //   headers: { \"Content-Type\": \"application/json\" },\r\n    //   body: JSON.stringify(payload)\r\n    // });\r\n\r\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/api/expenses`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(payload)\r\n    });\r\n\r\n    const data = await res.json();\r\n    if (data.expenseId) {\r\n      alert(\"✅ Expense added!\");\r\n      setView(\"dashboard\"); // 🔁 Redirect after success\r\n    } else {\r\n      alert(\"❌ Failed to add expense\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h3>Add New Expense</h3>\r\n\r\n      <div className=\"mb-3\">\r\n        <label>Select Group:</label>\r\n        <select\r\n          className=\"form-select\"\r\n          value={selectedGroupId}\r\n          onChange={(e) => setSelectedGroupId(e.target.value)}\r\n        >\r\n          <option value=\"\">-- Select a Group --</option>\r\n          {allGroups.map((g) => (\r\n            <option key={g.groupId} value={g.groupId}>\r\n              {g.groupName}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {group && (\r\n        <>\r\n          <div className=\"mb-3\">\r\n            <label>Paid By (Your Wallet Address):</label>\r\n            <input\r\n              className=\"form-control\"\r\n              value={paidBy}\r\n              onChange={(e) => setPaidBy(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label>Description:</label>\r\n            <input\r\n              className=\"form-control\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label>Amount in ETH:</label>\r\n            <input\r\n              className=\"form-control\"\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label>Split Type:</label>\r\n            <select\r\n              className=\"form-select\"\r\n              value={splitType}\r\n              onChange={(e) => setSplitType(e.target.value)}\r\n            >\r\n              <option value=\"equal\">Equal Split</option>\r\n              <option value=\"manual\">Manual Split</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"mb-4\">\r\n            <label>Split Between:</label>\r\n            {group.members.map((m, idx) => (\r\n              <div key={idx} className=\"mb-2\">\r\n                <strong>{m.name}</strong> ({m.address.slice(0, 6)}...{m.address.slice(-4)})\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control mt-1\"\r\n                  disabled={splitType === \"equal\"}\r\n                  value={\r\n                    splitType === \"equal\"\r\n                      ? calculateEqualSplit()[m.address]\r\n                      : splitDetails[m.address]\r\n                  }\r\n                  onChange={(e) => handleSplitChange(m.address, e.target.value)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {error && <p className=\"text-danger\">{error}</p>}\r\n\r\n          <button className=\"btn btn-primary\" onClick={handleSubmit}>\r\n            Submit Expense\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}