{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katas\\\\BlockChainProject\\\\expense-splitter-dapp\\\\src\\\\components\\\\ContractActions.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { getContract } from \"../utils/contract\";\nimport { parseEther } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContractActions({\n  signer\n}) {\n  _s();\n  const [depositAmount, setDepositAmount] = useState(\"\");\n  const [splitRows, setSplitRows] = useState([{\n    address: \"\",\n    amount: \"\"\n  }]);\n  const deposit = async () => {\n    try {\n      const contract = getContract(signer);\n      const tx = await contract.deposit({\n        value: parseEther(depositAmount)\n      });\n      await tx.wait();\n      alert(\"✅ Deposit successful!\");\n    } catch (error) {\n      console.error(\"❌ Deposit failed:\", error);\n      alert(\"❌ \" + ((error === null || error === void 0 ? void 0 : error.message) || \"Deposit failed\"));\n    }\n  };\n  const splitExpense = async () => {\n    try {\n      const contract = getContract(signer);\n      const addresses = splitRows.map(row => row.address.trim());\n      const amounts = splitRows.map(row => parseEther(row.amount.trim()));\n      const tx = await contract.splitExpense(addresses, amounts);\n      await tx.wait();\n      alert(\"✅ Split successful!\");\n    } catch (error) {\n      console.error(\"❌ Split failed:\", error);\n      alert(\"❌ \" + ((error === null || error === void 0 ? void 0 : error.message) || \"Split failed\"));\n    }\n  };\n  const updateRow = (index, field, value) => {\n    const updated = [...splitRows];\n    updated[index][field] = value;\n    setSplitRows(updated);\n  };\n  const addRow = () => {\n    setSplitRows([...splitRows, {\n      address: \"\",\n      amount: \"\"\n    }]);\n  };\n  const removeRow = index => {\n    const updated = splitRows.filter((_, i) => i !== index);\n    setSplitRows(updated);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDCB8 Deposit ETH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control mb-2\",\n      placeholder: \"Amount in ETH\",\n      value: depositAmount,\n      onChange: e => setDepositAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success mb-4\",\n      onClick: deposit,\n      children: \"Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDCE4 Split Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), splitRows.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-5\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Recipient Address\",\n          value: row.address,\n          onChange: e => updateRow(index, \"address\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-5\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          placeholder: \"Amount in ETH\",\n          value: row.amount,\n          onChange: e => updateRow(index, \"amount\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: () => removeRow(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary me-2\",\n        onClick: addRow,\n        children: \"+ Add More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: splitExpense,\n        children: \"Split\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(ContractActions, \"KkvzKTF31SFswVD/IN9Z/vurecw=\");\n_c = ContractActions;\nvar _c;\n$RefreshReg$(_c, \"ContractActions\");","map":{"version":3,"names":["useState","getContract","parseEther","jsxDEV","_jsxDEV","ContractActions","signer","_s","depositAmount","setDepositAmount","splitRows","setSplitRows","address","amount","deposit","contract","tx","value","wait","alert","error","console","message","splitExpense","addresses","map","row","trim","amounts","updateRow","index","field","updated","addRow","removeRow","filter","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/katas/BlockChainProject/expense-splitter-dapp/src/components/ContractActions.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { getContract } from \"../utils/contract\";\r\nimport { parseEther } from \"ethers\";\r\n\r\nexport default function ContractActions({ signer }) {\r\n    const [depositAmount, setDepositAmount] = useState(\"\");\r\n    const [splitRows, setSplitRows] = useState([{ address: \"\", amount: \"\" }]);\r\n\r\n    const deposit = async () => {\r\n        try {\r\n            const contract = getContract(signer);\r\n            const tx = await contract.deposit({\r\n                value: parseEther(depositAmount)\r\n            });\r\n            await tx.wait();\r\n            alert(\"✅ Deposit successful!\");\r\n        } catch (error) {\r\n            console.error(\"❌ Deposit failed:\", error);\r\n            alert(\"❌ \" + (error?.message || \"Deposit failed\"));\r\n        }\r\n    };\r\n\r\n    const splitExpense = async () => {\r\n        try {\r\n            const contract = getContract(signer);\r\n            const addresses = splitRows.map(row => row.address.trim());\r\n            const amounts = splitRows.map(row => parseEther(row.amount.trim()));\r\n            const tx = await contract.splitExpense(addresses, amounts);\r\n            await tx.wait();\r\n            alert(\"✅ Split successful!\");\r\n        } catch (error) {\r\n            console.error(\"❌ Split failed:\", error);\r\n            alert(\"❌ \" + (error?.message || \"Split failed\"));\r\n        }\r\n    };\r\n\r\n    const updateRow = (index, field, value) => {\r\n        const updated = [...splitRows];\r\n        updated[index][field] = value;\r\n        setSplitRows(updated);\r\n    };\r\n\r\n    const addRow = () => {\r\n        setSplitRows([...splitRows, { address: \"\", amount: \"\" }]);\r\n    };\r\n\r\n    const removeRow = (index) => {\r\n        const updated = splitRows.filter((_, i) => i !== index);\r\n        setSplitRows(updated);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h3>💸 Deposit ETH</h3>\r\n            <input\r\n                className=\"form-control mb-2\"\r\n                placeholder=\"Amount in ETH\"\r\n                value={depositAmount}\r\n                onChange={(e) => setDepositAmount(e.target.value)}\r\n            />\r\n            <button className=\"btn btn-success mb-4\" onClick={deposit}>Deposit</button>\r\n\r\n            <h3>📤 Split Expense</h3>\r\n            {splitRows.map((row, index) => (\r\n                <div className=\"row mb-2\" key={index}>\r\n                    <div className=\"col-md-5\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            placeholder=\"Recipient Address\"\r\n                            value={row.address}\r\n                            onChange={(e) => updateRow(index, \"address\", e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-5\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            placeholder=\"Amount in ETH\"\r\n                            value={row.amount}\r\n                            onChange={(e) => updateRow(index, \"amount\", e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                        <button className=\"btn btn-danger\" onClick={() => removeRow(index)}>Remove</button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            <div className=\"mb-3\">\r\n                <button className=\"btn btn-secondary me-2\" onClick={addRow}>+ Add More</button>\r\n                <button className=\"btn btn-warning\" onClick={splitExpense}>Split</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}