{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katas\\\\BlockChainProject\\\\expense-splitter-dapp\\\\src\\\\components\\\\ContractActions.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { getContract } from \"../utils/contract\";\nimport { parseEther } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContractActions({\n  signer\n}) {\n  _s();\n  const [depositAmount, setDepositAmount] = useState(\"\");\n  const [recipients, setRecipients] = useState(\"\");\n  const [amounts, setAmounts] = useState(\"\");\n  const deposit = async () => {\n    const contract = getContract(signer);\n    const tx = await contract.deposit({\n      value: parseEther(depositAmount)\n    });\n    await tx.wait();\n    alert(\"Deposit successful!\");\n  };\n  const splitExpense = async () => {\n    const contract = getContract(signer);\n    const addressList = recipients.split(\",\").map(addr => addr.trim());\n    const amountList = amounts.split(\",\").map(val => parseEther(val.trim()));\n    const tx = await contract.splitExpense(addressList, amountList);\n    await tx.wait();\n    alert(\"Expense split successfully!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDCB8 Deposit ETH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control mb-2\",\n      placeholder: \"Amount in ETH\",\n      value: depositAmount,\n      onChange: e => setDepositAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success mb-4\",\n      onClick: deposit,\n      children: \"Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDCE4 Split Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control mb-2\",\n      placeholder: \"Comma-separated addresses\",\n      value: recipients,\n      onChange: e => setRecipients(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control mb-2\",\n      placeholder: \"Comma-separated amounts in ETH\",\n      value: amounts,\n      onChange: e => setAmounts(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: splitExpense,\n      children: \"Split\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(ContractActions, \"0QR+p7zi4pbqHNs65WQZD3W5q8k=\");\n_c = ContractActions;\nvar _c;\n$RefreshReg$(_c, \"ContractActions\");","map":{"version":3,"names":["useState","getContract","parseEther","jsxDEV","_jsxDEV","ContractActions","signer","_s","depositAmount","setDepositAmount","recipients","setRecipients","amounts","setAmounts","deposit","contract","tx","value","wait","alert","splitExpense","addressList","split","map","addr","trim","amountList","val","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/katas/BlockChainProject/expense-splitter-dapp/src/components/ContractActions.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { getContract } from \"../utils/contract\";\r\nimport { parseEther } from \"ethers\";\r\n\r\nexport default function ContractActions({ signer }) {\r\n    const [depositAmount, setDepositAmount] = useState(\"\");\r\n    const [recipients, setRecipients] = useState(\"\");\r\n    const [amounts, setAmounts] = useState(\"\");\r\n\r\n    const deposit = async () => {\r\n        const contract = getContract(signer);\r\n        const tx = await contract.deposit({ value: parseEther(depositAmount) });\r\n        await tx.wait();\r\n        alert(\"Deposit successful!\");\r\n    };\r\n\r\n    const splitExpense = async () => {\r\n        const contract = getContract(signer);\r\n        const addressList = recipients.split(\",\").map(addr => addr.trim());\r\n        const amountList = amounts.split(\",\").map(val => parseEther(val.trim()));\r\n\r\n        const tx = await contract.splitExpense(addressList, amountList);\r\n        await tx.wait();\r\n        alert(\"Expense split successfully!\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h3>ðŸ’¸ Deposit ETH</h3>\r\n            <input\r\n                className=\"form-control mb-2\"\r\n                placeholder=\"Amount in ETH\"\r\n                value={depositAmount}\r\n                onChange={e => setDepositAmount(e.target.value)}\r\n            />\r\n            <button className=\"btn btn-success mb-4\" onClick={deposit}>Deposit</button>\r\n\r\n            <h3>ðŸ“¤ Split Expense</h3>\r\n            <input\r\n                className=\"form-control mb-2\"\r\n                placeholder=\"Comma-separated addresses\"\r\n                value={recipients}\r\n                onChange={e => setRecipients(e.target.value)}\r\n            />\r\n            <input\r\n                className=\"form-control mb-2\"\r\n                placeholder=\"Comma-separated amounts in ETH\"\r\n                value={amounts}\r\n                onChange={e => setAmounts(e.target.value)}\r\n            />\r\n            <button className=\"btn btn-warning\" onClick={splitExpense}>Split</button>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}