{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katas\\\\BlockChainProject\\\\expense-splitter-dapp\\\\src\\\\views\\\\AddExpense.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddExpense({\n  groupId\n}) {\n  _s();\n  const [paidBy, setPaidBy] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [splitBetween, setSplitBetween] = useState([\"\"]);\n  const handleSubmit = async () => {\n    const res = await fetch(\"http://localhost:5000/api/expenses\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        groupId,\n        paidBy,\n        amount: parseFloat(amount),\n        description,\n        splitBetween\n      })\n    });\n    const data = await res.json();\n    if (data.expenseId) {\n      alert(\"Expense added\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control mb-2\",\n      placeholder: \"Paid By Address\",\n      value: paidBy,\n      onChange: e => setPaidBy(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control mb-2\",\n      placeholder: \"Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control mb-2\",\n      placeholder: \"Amount in ETH\",\n      value: amount,\n      onChange: e => setAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), splitBetween.map((m, i) => /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control mb-2\",\n      placeholder: \"Split With\",\n      value: m,\n      onChange: e => {\n        const newSplit = [...splitBetween];\n        newSplit[i] = e.target.value;\n        setSplitBetween(newSplit);\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary me-2\",\n      onClick: () => setSplitBetween([...splitBetween, \"\"]),\n      children: \"+ Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(AddExpense, \"2b/h7jv7+O4VvsjoleyBtVcq+is=\");\n_c = AddExpense;\nvar _c;\n$RefreshReg$(_c, \"AddExpense\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","AddExpense","groupId","_s","paidBy","setPaidBy","description","setDescription","amount","setAmount","splitBetween","setSplitBetween","handleSubmit","res","fetch","method","headers","body","JSON","stringify","parseFloat","data","json","expenseId","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","placeholder","value","onChange","e","target","map","m","i","newSplit","onClick","_c","$RefreshReg$"],"sources":["C:/Users/katas/BlockChainProject/expense-splitter-dapp/src/views/AddExpense.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function AddExpense({ groupId }) {\r\n  const [paidBy, setPaidBy] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [splitBetween, setSplitBetween] = useState([\"\"]);\r\n\r\n  const handleSubmit = async () => {\r\n    const res = await fetch(\"http://localhost:5000/api/expenses\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        groupId,\r\n        paidBy,\r\n        amount: parseFloat(amount),\r\n        description,\r\n        splitBetween,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    if (data.expenseId) {\r\n      alert(\"Expense added\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Add Expense</h3>\r\n      <input className=\"form-control mb-2\" placeholder=\"Paid By Address\" value={paidBy} onChange={(e) => setPaidBy(e.target.value)} />\r\n      <input className=\"form-control mb-2\" placeholder=\"Description\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n      <input className=\"form-control mb-2\" placeholder=\"Amount in ETH\" value={amount} onChange={(e) => setAmount(e.target.value)} />\r\n      {splitBetween.map((m, i) => (\r\n        <input key={i} className=\"form-control mb-2\" placeholder=\"Split With\" value={m} onChange={(e) => {\r\n          const newSplit = [...splitBetween];\r\n          newSplit[i] = e.target.value;\r\n          setSplitBetween(newSplit);\r\n        }} />\r\n      ))}\r\n      <button className=\"btn btn-secondary me-2\" onClick={() => setSplitBetween([...splitBetween, \"\"])}>+ Add</button>\r\n      <button className=\"btn btn-warning\" onClick={handleSubmit}>Submit</button>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}