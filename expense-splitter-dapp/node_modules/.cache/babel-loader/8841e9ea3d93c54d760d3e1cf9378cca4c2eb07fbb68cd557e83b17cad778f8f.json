{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{getContract}from\"../utils/contract\";import{parseEther}from\"ethers\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function GroupsPage(_ref){let{signer,setView,setSelectedGroup}=_ref;const[address,setAddress]=useState(\"\");const[groups,setGroups]=useState([]);const[balances,setBalances]=useState({});const[loading,setLoading]=useState(true);useEffect(()=>{const fetchGroupsAndBalances=async()=>{try{const addr=await signer.getAddress();setAddress(addr);const res=await fetch(\"http://localhost:5000/api/groups\");const allGroups=await res.json();const myGroups=allGroups.filter(group=>group.members.some(m=>m.address.toLowerCase()===addr.toLowerCase()));const balanceMap={};for(let group of myGroups){try{const balRes=await fetch(`http://localhost:5000/api/expenses/group/${group.groupId}/balance`);const groupBalances=await balRes.json();balanceMap[group.groupId]=groupBalances;}catch(err){console.warn(`Failed to fetch balances for ${group.groupName}:`,err);}}setGroups(myGroups);setBalances(balanceMap);}catch(err){console.error(\"Group fetch error:\",err);}finally{setLoading(false);}};if(signer)fetchGroupsAndBalances();},[signer]);const handleSettleUp=group=>{setSelectedGroup(group);setView(\"settle\");};const openActivity=groupId=>{console.log(\"Open activity for:\",groupId);// TODO: Modal or redirect\n};if(loading)return/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-4\",children:\"Loading your groups...\"});return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-5\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"mb-4\",children:\"\\uD83D\\uDCCB Your Groups\"}),groups.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"You are not part of any groups yet.\"}):groups.map(group=>{const groupBalances=balances[group.groupId]||{};const members=group.members;const memberMap={};const addressMap={};members.forEach(m=>{memberMap[m.name]=m.address.toLowerCase();addressMap[m.address.toLowerCase()]=m.name;});const lowerAddr=address.toLowerCase();const yourName=addressMap[lowerAddr];const yourOwnBalance=groupBalances[yourName]||0;let yourText=\"You're all settled in this group\";let yourColor=\"black\";if(yourOwnBalance>0){yourText=`You owe ${yourOwnBalance.toFixed(4)} ETH`;yourColor=\"red\";}else if(yourOwnBalance<0){yourText=`You are owed ${Math.abs(yourOwnBalance).toFixed(4)} ETH`;yourColor=\"green\";}return/*#__PURE__*/_jsxs(\"div\",{className:\"card mb-4 shadow-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:group.groupName}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-sm btn-outline-secondary me-2\",onClick:()=>openActivity(group.groupId),children:\"Activity\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-sm btn-outline-primary\",onClick:()=>handleSettleUp(group),children:\"Settle Up\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"p\",{style:{fontWeight:\"bold\",color:yourColor},children:yourText}),/*#__PURE__*/_jsx(\"hr\",{}),Object.entries(groupBalances).map(_ref2=>{let[name,amount]=_ref2;if(name===yourName)return null;const absAmount=Math.abs(amount).toFixed(4);// ðŸŸ¢ They owe you\nif(yourOwnBalance<0&&amount<0){return/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-between align-items-center mb-2\",children:/*#__PURE__*/_jsxs(\"span\",{style:{color:\"green\",fontWeight:\"bold\"},children:[name,\" owes you \",absAmount,\" ETH\"]})},name);}// ðŸ”´ You owe someone with positive balance\nif(yourOwnBalance>0&&groupBalances[name]>0){return/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-between align-items-center mb-2\",children:/*#__PURE__*/_jsxs(\"span\",{style:{color:\"red\",fontWeight:\"bold\"},children:[\"You owe \",name,\" \",yourOwnBalance.toFixed(4),\" ETH\"]})},name);}return null;})]})]},group.groupId);})]});}","map":{"version":3,"names":["React","useEffect","useState","getContract","parseEther","jsx","_jsx","jsxs","_jsxs","GroupsPage","_ref","signer","setView","setSelectedGroup","address","setAddress","groups","setGroups","balances","setBalances","loading","setLoading","fetchGroupsAndBalances","addr","getAddress","res","fetch","allGroups","json","myGroups","filter","group","members","some","m","toLowerCase","balanceMap","balRes","groupId","groupBalances","err","console","warn","groupName","error","handleSettleUp","openActivity","log","className","children","length","map","memberMap","addressMap","forEach","name","lowerAddr","yourName","yourOwnBalance","yourText","yourColor","toFixed","Math","abs","onClick","style","fontWeight","color","Object","entries","_ref2","amount","absAmount"],"sources":["C:/Users/katas/BlockChainProject/expense-splitter-dapp/src/views/GroupsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getContract } from \"../utils/contract\";\r\nimport { parseEther } from \"ethers\";\r\n\r\nexport default function GroupsPage({ signer, setView, setSelectedGroup }) {\r\n  const [address, setAddress] = useState(\"\");\r\n  const [groups, setGroups] = useState([]);\r\n  const [balances, setBalances] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchGroupsAndBalances = async () => {\r\n      try {\r\n        const addr = await signer.getAddress();\r\n        setAddress(addr);\r\n\r\n        const res = await fetch(\"http://localhost:5000/api/groups\");\r\n        const allGroups = await res.json();\r\n\r\n        const myGroups = allGroups.filter(group =>\r\n          group.members.some(m =>\r\n            m.address.toLowerCase() === addr.toLowerCase()\r\n          )\r\n        );\r\n\r\n        const balanceMap = {};\r\n        for (let group of myGroups) {\r\n          try {\r\n            const balRes = await fetch(`http://localhost:5000/api/expenses/group/${group.groupId}/balance`);\r\n            const groupBalances = await balRes.json();\r\n            balanceMap[group.groupId] = groupBalances;\r\n          } catch (err) {\r\n            console.warn(`Failed to fetch balances for ${group.groupName}:`, err);\r\n          }\r\n        }\r\n\r\n        setGroups(myGroups);\r\n        setBalances(balanceMap);\r\n      } catch (err) {\r\n        console.error(\"Group fetch error:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (signer) fetchGroupsAndBalances();\r\n  }, [signer]);\r\n\r\n  const handleSettleUp = (group) => {\r\n    setSelectedGroup(group);\r\n    setView(\"settle\");\r\n  };\r\n\r\n  const openActivity = (groupId) => {\r\n    console.log(\"Open activity for:\", groupId);\r\n    // TODO: Modal or redirect\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center mt-4\">Loading your groups...</div>;\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h3 className=\"mb-4\">ðŸ“‹ Your Groups</h3>\r\n\r\n      {groups.length === 0 ? (\r\n        <p>You are not part of any groups yet.</p>\r\n      ) : (\r\n        groups.map(group => {\r\n          const groupBalances = balances[group.groupId] || {};\r\n          const members = group.members;\r\n\r\n          const memberMap = {};\r\n          const addressMap = {};\r\n\r\n          members.forEach(m => {\r\n            memberMap[m.name] = m.address.toLowerCase();\r\n            addressMap[m.address.toLowerCase()] = m.name;\r\n          });\r\n\r\n          const lowerAddr = address.toLowerCase();\r\n          const yourName = addressMap[lowerAddr];\r\n          const yourOwnBalance = groupBalances[yourName] || 0;\r\n\r\n          let yourText = \"You're all settled in this group\";\r\n          let yourColor = \"black\";\r\n\r\n          if (yourOwnBalance > 0) {\r\n            yourText = `You owe ${yourOwnBalance.toFixed(4)} ETH`;\r\n            yourColor = \"red\";\r\n          } else if (yourOwnBalance < 0) {\r\n            yourText = `You are owed ${Math.abs(yourOwnBalance).toFixed(4)} ETH`;\r\n            yourColor = \"green\";\r\n          }\r\n\r\n          return (\r\n            <div key={group.groupId} className=\"card mb-4 shadow-sm\">\r\n              <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n                <h5 className=\"mb-0\">{group.groupName}</h5>\r\n                <div>\r\n                  <button\r\n                    className=\"btn btn-sm btn-outline-secondary me-2\"\r\n                    onClick={() => openActivity(group.groupId)}\r\n                  >\r\n                    Activity\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-sm btn-outline-primary\"\r\n                    onClick={() => handleSettleUp(group)}\r\n                  >\r\n                    Settle Up\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <p style={{ fontWeight: \"bold\", color: yourColor }}>{yourText}</p>\r\n                <hr />\r\n\r\n                {Object.entries(groupBalances).map(([name, amount]) => {\r\n                  if (name === yourName) return null;\r\n\r\n                  const absAmount = Math.abs(amount).toFixed(4);\r\n\r\n                  // ðŸŸ¢ They owe you\r\n                  if (yourOwnBalance < 0 && amount < 0) {\r\n                    return (\r\n                      <div key={name} className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                        <span style={{ color: \"green\", fontWeight: \"bold\" }}>\r\n                          {name} owes you {absAmount} ETH\r\n                        </span>\r\n                      </div>\r\n                    );\r\n                  }\r\n\r\n                  // ðŸ”´ You owe someone with positive balance\r\n                  if (yourOwnBalance > 0 && groupBalances[name] > 0) {\r\n                    return (\r\n                      <div key={name} className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                        <span style={{ color: \"red\", fontWeight: \"bold\" }}>\r\n                          You owe {name} {yourOwnBalance.toFixed(4)} ETH\r\n                        </span>\r\n                      </div>\r\n                    );\r\n                  }\r\n\r\n                  return null;\r\n                })}\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}