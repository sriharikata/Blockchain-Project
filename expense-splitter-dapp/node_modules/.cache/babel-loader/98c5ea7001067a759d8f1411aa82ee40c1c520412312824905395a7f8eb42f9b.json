{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katas\\\\BlockChainProject\\\\expense-splitter-dapp\\\\src\\\\views\\\\GroupSummary.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GroupSummary({\n  groupId\n}) {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [balances, setBalances] = useState({});\n  useEffect(() => {\n    const load = async () => {\n      try {\n        const expRes = await fetch(`http://localhost:5000/api/expenses/group/${groupId}`);\n        const balRes = await fetch(`http://localhost:5000/api/expenses/group/${groupId}/balance`);\n        const expenses = await expRes.json();\n        const balances = await balRes.json();\n        setExpenses(expenses);\n        setBalances(balances);\n      } catch (err) {\n        console.error(\"Failed to load group data:\", err);\n      }\n    };\n    load();\n  }, [groupId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDCD2 Expense History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group mb-4\",\n      children: expenses.map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: e.paidBy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), \" paid \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [e.amount, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 46\n        }, this), \" for \\\"\", e.description, \"\\\"\"]\n      }, e.expenseId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDCCA Who Owes What\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: Object.entries(balances).map(([name, amount]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), \": \", amount, \" ETH\"]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(GroupSummary, \"ge2aeu6zog7QLJcwSEZDponT834=\");\n_c = GroupSummary;\nvar _c;\n$RefreshReg$(_c, \"GroupSummary\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","GroupSummary","groupId","_s","expenses","setExpenses","balances","setBalances","load","expRes","fetch","balRes","json","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","e","paidBy","amount","description","expenseId","Object","entries","name","_c","$RefreshReg$"],"sources":["C:/Users/katas/BlockChainProject/expense-splitter-dapp/src/views/GroupSummary.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function GroupSummary({ groupId }) {\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [balances, setBalances] = useState({});\r\n\r\n  useEffect(() => {\r\n    const load = async () => {\r\n      try {\r\n        const expRes = await fetch(`http://localhost:5000/api/expenses/group/${groupId}`);\r\n        const balRes = await fetch(`http://localhost:5000/api/expenses/group/${groupId}/balance`);\r\n\r\n        const expenses = await expRes.json();\r\n        const balances = await balRes.json();\r\n\r\n        setExpenses(expenses);\r\n        setBalances(balances);\r\n      } catch (err) {\r\n        console.error(\"Failed to load group data:\", err);\r\n      }\r\n    };\r\n    load();\r\n  }, [groupId]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>ðŸ“’ Expense History</h3>\r\n      <ul className=\"list-group mb-4\">\r\n        {expenses.map((e) => (\r\n          <li className=\"list-group-item\" key={e.expenseId}>\r\n            <strong>{e.paidBy}</strong> paid <strong>{e.amount} ETH</strong> for \"{e.description}\"\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h3>ðŸ“Š Who Owes What</h3>\r\n      <ul className=\"list-group\">\r\n        {Object.entries(balances).map(([name, amount]) => (\r\n          <li key={name} className=\"list-group-item\">\r\n            <strong>{name}</strong>: {amount} ETH\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,YAAYA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMW,IAAI,GAAG,MAAAA,CAAA,KAAY;MACvB,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,4CAA4CR,OAAO,EAAE,CAAC;QACjF,MAAMS,MAAM,GAAG,MAAMD,KAAK,CAAC,4CAA4CR,OAAO,UAAU,CAAC;QAEzF,MAAME,QAAQ,GAAG,MAAMK,MAAM,CAACG,IAAI,CAAC,CAAC;QACpC,MAAMN,QAAQ,GAAG,MAAMK,MAAM,CAACC,IAAI,CAAC,CAAC;QAEpCP,WAAW,CAACD,QAAQ,CAAC;QACrBG,WAAW,CAACD,QAAQ,CAAC;MACvB,CAAC,CAAC,OAAOO,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;MAClD;IACF,CAAC;IACDL,IAAI,CAAC,CAAC;EACR,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;EAEb,oBACEF,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BpB,OAAA;MAAIqB,SAAS,EAAC,iBAAiB;MAAAL,QAAA,EAC5BZ,QAAQ,CAACkB,GAAG,CAAEC,CAAC,iBACdvB,OAAA;QAAIqB,SAAS,EAAC,iBAAiB;QAAAL,QAAA,gBAC7BhB,OAAA;UAAAgB,QAAA,EAASO,CAAC,CAACC;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,UAAM,eAAApB,OAAA;UAAAgB,QAAA,GAASO,CAAC,CAACE,MAAM,EAAC,MAAI;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,WAAM,EAACG,CAAC,CAACG,WAAW,EAAC,IACvF;MAAA,GAFqCH,CAAC,CAACI,SAAS;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE5C,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAELpB,OAAA;MAAAgB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBpB,OAAA;MAAIqB,SAAS,EAAC,YAAY;MAAAL,QAAA,EACvBY,MAAM,CAACC,OAAO,CAACvB,QAAQ,CAAC,CAACgB,GAAG,CAAC,CAAC,CAACQ,IAAI,EAAEL,MAAM,CAAC,kBAC3CzB,OAAA;QAAeqB,SAAS,EAAC,iBAAiB;QAAAL,QAAA,gBACxChB,OAAA;UAAAgB,QAAA,EAASc;QAAI;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,MAAE,EAACK,MAAM,EAAC,MACnC;MAAA,GAFSK,IAAI;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACjB,EAAA,CA3CuBF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}