{"ast":null,"code":"import{useEffect,useState}from\"react\";import{BrowserProvider}from\"ethers\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function AddExpense(_ref){let{setView}=_ref;const[allGroups,setAllGroups]=useState([]);const[selectedGroupId,setSelectedGroupId]=useState(\"\");const[group,setGroup]=useState(null);const[paidBy,setPaidBy]=useState(\"\");const[description,setDescription]=useState(\"\");const[amount,setAmount]=useState(\"\");const[splitType,setSplitType]=useState(\"equal\");const[splitDetails,setSplitDetails]=useState({});const[error,setError]=useState(\"\");useEffect(()=>{const loadGroups=async()=>{const res=await fetch(\"http://localhost:5000/api/groups\");const data=await res.json();setAllGroups(data);};loadGroups();},[]);useEffect(()=>{const selected=allGroups.find(g=>g.groupId===selectedGroupId);if(selected){setGroup(selected);const initialSplit={};selected.members.forEach(m=>{initialSplit[m.address]=\"\";});setSplitDetails(initialSplit);}},[selectedGroupId,allGroups]);useEffect(()=>{const fetchConnectedWallet=async()=>{try{const provider=new BrowserProvider(window.ethereum);const signer=await provider.getSigner();const addr=await signer.getAddress();const match=group===null||group===void 0?void 0:group.members.find(m=>m.address.toLowerCase()===addr.toLowerCase());setPaidBy(match?match.address:addr);}catch(err){console.error(\"Auto-fill wallet failed\",err);}};if(group)fetchConnectedWallet();},[group]);const calculateEqualSplit=()=>{if(!group||!amount)return{};const perPerson=parseFloat(amount)/group.members.length;const result={};group.members.forEach(m=>{result[m.address]=perPerson.toFixed(4);});return result;};const handleSplitChange=(address,value)=>{setSplitDetails(prev=>({...prev,[address]:value}));};const handleSubmit=async()=>{setError(\"\");const total=parseFloat(amount);const splitBetween=splitType===\"equal\"?Object.keys(calculateEqualSplit()):Object.keys(splitDetails).filter(addr=>parseFloat(splitDetails[addr])>0);const finalSplit=splitType===\"equal\"?calculateEqualSplit():splitDetails;// ✅ Manual Split Validation\nif(splitType===\"manual\"){const totalSplit=Object.values(finalSplit).reduce((sum,v)=>sum+parseFloat(v||0),0);if(Math.abs(total-totalSplit)>0.0001){setError(`Total split (${totalSplit.toFixed(4)} ETH) does not match entered amount (${total} ETH).`);return;}}const payload={groupId:selectedGroupId,paidBy,amount:total,description,splitBetween,splitDetails:finalSplit};const res=await fetch(\"http://localhost:5000/api/expenses\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(payload)});const data=await res.json();if(data.expenseId){alert(\"✅ Expense added!\");setView(\"dashboard\");// 🔁 Redirect after success\n}else{alert(\"❌ Failed to add expense\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-4\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Add New Expense\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Select Group:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-select\",value:selectedGroupId,onChange:e=>setSelectedGroupId(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"-- Select a Group --\"}),allGroups.map(g=>/*#__PURE__*/_jsx(\"option\",{value:g.groupId,children:g.groupName},g.groupId))]})]}),group&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Paid By (Your Wallet Address):\"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",value:paidBy,onChange:e=>setPaidBy(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Description:\"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",value:description,onChange:e=>setDescription(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Amount in ETH:\"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",value:amount,onChange:e=>setAmount(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Split Type:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-select\",value:splitType,onChange:e=>setSplitType(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"equal\",children:\"Equal Split\"}),/*#__PURE__*/_jsx(\"option\",{value:\"manual\",children:\"Manual Split\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Split Between:\"}),group.members.map((m,idx)=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:m.name}),\" (\",m.address.slice(0,6),\"...\",m.address.slice(-4),\")\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control mt-1\",disabled:splitType===\"equal\",value:splitType===\"equal\"?calculateEqualSplit()[m.address]:splitDetails[m.address],onChange:e=>handleSplitChange(m.address,e.target.value)})]},idx))]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"text-danger\",children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:handleSubmit,children:\"Submit Expense\"})]})]});}","map":{"version":3,"names":["useEffect","useState","BrowserProvider","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AddExpense","_ref","setView","allGroups","setAllGroups","selectedGroupId","setSelectedGroupId","group","setGroup","paidBy","setPaidBy","description","setDescription","amount","setAmount","splitType","setSplitType","splitDetails","setSplitDetails","error","setError","loadGroups","res","fetch","data","json","selected","find","g","groupId","initialSplit","members","forEach","m","address","fetchConnectedWallet","provider","window","ethereum","signer","getSigner","addr","getAddress","match","toLowerCase","err","console","calculateEqualSplit","perPerson","parseFloat","length","result","toFixed","handleSplitChange","value","prev","handleSubmit","total","splitBetween","Object","keys","filter","finalSplit","totalSplit","values","reduce","sum","v","Math","abs","payload","method","headers","body","JSON","stringify","expenseId","alert","className","children","onChange","e","target","map","groupName","idx","name","slice","type","disabled","onClick"],"sources":["C:/Users/katas/BlockChainProject/expense-splitter-dapp/src/views/AddExpense.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { BrowserProvider } from \"ethers\";\r\n\r\nexport default function AddExpense({ setView }) {\r\n  const [allGroups, setAllGroups] = useState([]);\r\n  const [selectedGroupId, setSelectedGroupId] = useState(\"\");\r\n  const [group, setGroup] = useState(null);\r\n\r\n  const [paidBy, setPaidBy] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [splitType, setSplitType] = useState(\"equal\");\r\n  const [splitDetails, setSplitDetails] = useState({});\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const loadGroups = async () => {\r\n      const res = await fetch(\"http://localhost:5000/api/groups\");\r\n      const data = await res.json();\r\n      setAllGroups(data);\r\n    };\r\n    loadGroups();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selected = allGroups.find((g) => g.groupId === selectedGroupId);\r\n    if (selected) {\r\n      setGroup(selected);\r\n      const initialSplit = {};\r\n      selected.members.forEach((m) => {\r\n        initialSplit[m.address] = \"\";\r\n      });\r\n      setSplitDetails(initialSplit);\r\n    }\r\n  }, [selectedGroupId, allGroups]);\r\n\r\n  useEffect(() => {\r\n    const fetchConnectedWallet = async () => {\r\n      try {\r\n        const provider = new BrowserProvider(window.ethereum);\r\n        const signer = await provider.getSigner();\r\n        const addr = await signer.getAddress();\r\n        const match = group?.members.find((m) => m.address.toLowerCase() === addr.toLowerCase());\r\n        setPaidBy(match ? match.address : addr);\r\n      } catch (err) {\r\n        console.error(\"Auto-fill wallet failed\", err);\r\n      }\r\n    };\r\n\r\n    if (group) fetchConnectedWallet();\r\n  }, [group]);\r\n\r\n  const calculateEqualSplit = () => {\r\n    if (!group || !amount) return {};\r\n    const perPerson = parseFloat(amount) / group.members.length;\r\n    const result = {};\r\n    group.members.forEach((m) => {\r\n      result[m.address] = perPerson.toFixed(4);\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const handleSplitChange = (address, value) => {\r\n    setSplitDetails((prev) => ({\r\n      ...prev,\r\n      [address]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    setError(\"\");\r\n\r\n    const total = parseFloat(amount);\r\n    const splitBetween =\r\n      splitType === \"equal\"\r\n        ? Object.keys(calculateEqualSplit())\r\n        : Object.keys(splitDetails).filter((addr) => parseFloat(splitDetails[addr]) > 0);\r\n\r\n    const finalSplit =\r\n      splitType === \"equal\" ? calculateEqualSplit() : splitDetails;\r\n\r\n    // ✅ Manual Split Validation\r\n    if (splitType === \"manual\") {\r\n      const totalSplit = Object.values(finalSplit).reduce(\r\n        (sum, v) => sum + parseFloat(v || 0), 0\r\n      );\r\n\r\n      if (Math.abs(total - totalSplit) > 0.0001) {\r\n        setError(`Total split (${totalSplit.toFixed(4)} ETH) does not match entered amount (${total} ETH).`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    const payload = {\r\n      groupId: selectedGroupId,\r\n      paidBy,\r\n      amount: total,\r\n      description,\r\n      splitBetween,\r\n      splitDetails: finalSplit\r\n    };\r\n\r\n    const res = await fetch(\"http://localhost:5000/api/expenses\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(payload)\r\n    });\r\n\r\n    const data = await res.json();\r\n    if (data.expenseId) {\r\n      alert(\"✅ Expense added!\");\r\n      setView(\"dashboard\"); // 🔁 Redirect after success\r\n    } else {\r\n      alert(\"❌ Failed to add expense\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h3>Add New Expense</h3>\r\n\r\n      <div className=\"mb-3\">\r\n        <label>Select Group:</label>\r\n        <select\r\n          className=\"form-select\"\r\n          value={selectedGroupId}\r\n          onChange={(e) => setSelectedGroupId(e.target.value)}\r\n        >\r\n          <option value=\"\">-- Select a Group --</option>\r\n          {allGroups.map((g) => (\r\n            <option key={g.groupId} value={g.groupId}>\r\n              {g.groupName}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {group && (\r\n        <>\r\n          <div className=\"mb-3\">\r\n            <label>Paid By (Your Wallet Address):</label>\r\n            <input\r\n              className=\"form-control\"\r\n              value={paidBy}\r\n              onChange={(e) => setPaidBy(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label>Description:</label>\r\n            <input\r\n              className=\"form-control\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label>Amount in ETH:</label>\r\n            <input\r\n              className=\"form-control\"\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label>Split Type:</label>\r\n            <select\r\n              className=\"form-select\"\r\n              value={splitType}\r\n              onChange={(e) => setSplitType(e.target.value)}\r\n            >\r\n              <option value=\"equal\">Equal Split</option>\r\n              <option value=\"manual\">Manual Split</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"mb-4\">\r\n            <label>Split Between:</label>\r\n            {group.members.map((m, idx) => (\r\n              <div key={idx} className=\"mb-2\">\r\n                <strong>{m.name}</strong> ({m.address.slice(0, 6)}...{m.address.slice(-4)})\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control mt-1\"\r\n                  disabled={splitType === \"equal\"}\r\n                  value={\r\n                    splitType === \"equal\"\r\n                      ? calculateEqualSplit()[m.address]\r\n                      : splitDetails[m.address]\r\n                  }\r\n                  onChange={(e) => handleSplitChange(m.address, e.target.value)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {error && <p className=\"text-danger\">{error}</p>}\r\n\r\n          <button className=\"btn btn-primary\" onClick={handleSubmit}>\r\n            Submit Expense\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,eAAe,KAAQ,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEzC,cAAe,SAAS,CAAAC,UAAUA,CAAAC,IAAA,CAAc,IAAb,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CAC5C,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACa,eAAe,CAAEC,kBAAkB,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAACiB,MAAM,CAAEC,SAAS,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACmB,WAAW,CAAEC,cAAc,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACqB,MAAM,CAAEC,SAAS,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACuB,SAAS,CAAEC,YAAY,CAAC,CAAGxB,QAAQ,CAAC,OAAO,CAAC,CACnD,KAAM,CAACyB,YAAY,CAAEC,eAAe,CAAC,CAAG1B,QAAQ,CAAC,CAAC,CAAC,CAAC,CACpD,KAAM,CAAC2B,KAAK,CAAEC,QAAQ,CAAC,CAAG5B,QAAQ,CAAC,EAAE,CAAC,CAEtCD,SAAS,CAAC,IAAM,CACd,KAAM,CAAA8B,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,kCAAkC,CAAC,CAC3D,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,GAAG,CAACG,IAAI,CAAC,CAAC,CAC7BrB,YAAY,CAACoB,IAAI,CAAC,CACpB,CAAC,CACDH,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN9B,SAAS,CAAC,IAAM,CACd,KAAM,CAAAmC,QAAQ,CAAGvB,SAAS,CAACwB,IAAI,CAAEC,CAAC,EAAKA,CAAC,CAACC,OAAO,GAAKxB,eAAe,CAAC,CACrE,GAAIqB,QAAQ,CAAE,CACZlB,QAAQ,CAACkB,QAAQ,CAAC,CAClB,KAAM,CAAAI,YAAY,CAAG,CAAC,CAAC,CACvBJ,QAAQ,CAACK,OAAO,CAACC,OAAO,CAAEC,CAAC,EAAK,CAC9BH,YAAY,CAACG,CAAC,CAACC,OAAO,CAAC,CAAG,EAAE,CAC9B,CAAC,CAAC,CACFhB,eAAe,CAACY,YAAY,CAAC,CAC/B,CACF,CAAC,CAAE,CAACzB,eAAe,CAAEF,SAAS,CAAC,CAAC,CAEhCZ,SAAS,CAAC,IAAM,CACd,KAAM,CAAA4C,oBAAoB,CAAG,KAAAA,CAAA,GAAY,CACvC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAA3C,eAAe,CAAC4C,MAAM,CAACC,QAAQ,CAAC,CACrD,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAH,QAAQ,CAACI,SAAS,CAAC,CAAC,CACzC,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,MAAM,CAACG,UAAU,CAAC,CAAC,CACtC,KAAM,CAAAC,KAAK,CAAGpC,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEwB,OAAO,CAACJ,IAAI,CAAEM,CAAC,EAAKA,CAAC,CAACC,OAAO,CAACU,WAAW,CAAC,CAAC,GAAKH,IAAI,CAACG,WAAW,CAAC,CAAC,CAAC,CACxFlC,SAAS,CAACiC,KAAK,CAAGA,KAAK,CAACT,OAAO,CAAGO,IAAI,CAAC,CACzC,CAAE,MAAOI,GAAG,CAAE,CACZC,OAAO,CAAC3B,KAAK,CAAC,yBAAyB,CAAE0B,GAAG,CAAC,CAC/C,CACF,CAAC,CAED,GAAItC,KAAK,CAAE4B,oBAAoB,CAAC,CAAC,CACnC,CAAC,CAAE,CAAC5B,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAwC,mBAAmB,CAAGA,CAAA,GAAM,CAChC,GAAI,CAACxC,KAAK,EAAI,CAACM,MAAM,CAAE,MAAO,CAAC,CAAC,CAChC,KAAM,CAAAmC,SAAS,CAAGC,UAAU,CAACpC,MAAM,CAAC,CAAGN,KAAK,CAACwB,OAAO,CAACmB,MAAM,CAC3D,KAAM,CAAAC,MAAM,CAAG,CAAC,CAAC,CACjB5C,KAAK,CAACwB,OAAO,CAACC,OAAO,CAAEC,CAAC,EAAK,CAC3BkB,MAAM,CAAClB,CAAC,CAACC,OAAO,CAAC,CAAGc,SAAS,CAACI,OAAO,CAAC,CAAC,CAAC,CAC1C,CAAC,CAAC,CACF,MAAO,CAAAD,MAAM,CACf,CAAC,CAED,KAAM,CAAAE,iBAAiB,CAAGA,CAACnB,OAAO,CAAEoB,KAAK,GAAK,CAC5CpC,eAAe,CAAEqC,IAAI,GAAM,CACzB,GAAGA,IAAI,CACP,CAACrB,OAAO,EAAGoB,KACb,CAAC,CAAC,CAAC,CACL,CAAC,CAED,KAAM,CAAAE,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/BpC,QAAQ,CAAC,EAAE,CAAC,CAEZ,KAAM,CAAAqC,KAAK,CAAGR,UAAU,CAACpC,MAAM,CAAC,CAChC,KAAM,CAAA6C,YAAY,CAChB3C,SAAS,GAAK,OAAO,CACjB4C,MAAM,CAACC,IAAI,CAACb,mBAAmB,CAAC,CAAC,CAAC,CAClCY,MAAM,CAACC,IAAI,CAAC3C,YAAY,CAAC,CAAC4C,MAAM,CAAEpB,IAAI,EAAKQ,UAAU,CAAChC,YAAY,CAACwB,IAAI,CAAC,CAAC,CAAG,CAAC,CAAC,CAEpF,KAAM,CAAAqB,UAAU,CACd/C,SAAS,GAAK,OAAO,CAAGgC,mBAAmB,CAAC,CAAC,CAAG9B,YAAY,CAE9D;AACA,GAAIF,SAAS,GAAK,QAAQ,CAAE,CAC1B,KAAM,CAAAgD,UAAU,CAAGJ,MAAM,CAACK,MAAM,CAACF,UAAU,CAAC,CAACG,MAAM,CACjD,CAACC,GAAG,CAAEC,CAAC,GAAKD,GAAG,CAAGjB,UAAU,CAACkB,CAAC,EAAI,CAAC,CAAC,CAAE,CACxC,CAAC,CAED,GAAIC,IAAI,CAACC,GAAG,CAACZ,KAAK,CAAGM,UAAU,CAAC,CAAG,MAAM,CAAE,CACzC3C,QAAQ,CAAC,gBAAgB2C,UAAU,CAACX,OAAO,CAAC,CAAC,CAAC,wCAAwCK,KAAK,QAAQ,CAAC,CACpG,OACF,CACF,CAEA,KAAM,CAAAa,OAAO,CAAG,CACdzC,OAAO,CAAExB,eAAe,CACxBI,MAAM,CACNI,MAAM,CAAE4C,KAAK,CACb9C,WAAW,CACX+C,YAAY,CACZzC,YAAY,CAAE6C,UAChB,CAAC,CAED,KAAM,CAAAxC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,oCAAoC,CAAE,CAC5DgD,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,OAAO,CAC9B,CAAC,CAAC,CAEF,KAAM,CAAA9C,IAAI,CAAG,KAAM,CAAAF,GAAG,CAACG,IAAI,CAAC,CAAC,CAC7B,GAAID,IAAI,CAACoD,SAAS,CAAE,CAClBC,KAAK,CAAC,kBAAkB,CAAC,CACzB3E,OAAO,CAAC,WAAW,CAAC,CAAE;AACxB,CAAC,IAAM,CACL2E,KAAK,CAAC,yBAAyB,CAAC,CAClC,CACF,CAAC,CAED,mBACEhF,KAAA,QAAKiF,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BpF,IAAA,OAAAoF,QAAA,CAAI,iBAAe,CAAI,CAAC,cAExBlF,KAAA,QAAKiF,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBpF,IAAA,UAAAoF,QAAA,CAAO,eAAa,CAAO,CAAC,cAC5BlF,KAAA,WACEiF,SAAS,CAAC,aAAa,CACvBxB,KAAK,CAAEjD,eAAgB,CACvB2E,QAAQ,CAAGC,CAAC,EAAK3E,kBAAkB,CAAC2E,CAAC,CAACC,MAAM,CAAC5B,KAAK,CAAE,CAAAyB,QAAA,eAEpDpF,IAAA,WAAQ2D,KAAK,CAAC,EAAE,CAAAyB,QAAA,CAAC,sBAAoB,CAAQ,CAAC,CAC7C5E,SAAS,CAACgF,GAAG,CAAEvD,CAAC,eACfjC,IAAA,WAAwB2D,KAAK,CAAE1B,CAAC,CAACC,OAAQ,CAAAkD,QAAA,CACtCnD,CAAC,CAACwD,SAAS,EADDxD,CAAC,CAACC,OAEP,CACT,CAAC,EACI,CAAC,EACN,CAAC,CAELtB,KAAK,eACJV,KAAA,CAAAE,SAAA,EAAAgF,QAAA,eACElF,KAAA,QAAKiF,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBpF,IAAA,UAAAoF,QAAA,CAAO,gCAA8B,CAAO,CAAC,cAC7CpF,IAAA,UACEmF,SAAS,CAAC,cAAc,CACxBxB,KAAK,CAAE7C,MAAO,CACduE,QAAQ,CAAGC,CAAC,EAAKvE,SAAS,CAACuE,CAAC,CAACC,MAAM,CAAC5B,KAAK,CAAE,CAC5C,CAAC,EACC,CAAC,cAENzD,KAAA,QAAKiF,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBpF,IAAA,UAAAoF,QAAA,CAAO,cAAY,CAAO,CAAC,cAC3BpF,IAAA,UACEmF,SAAS,CAAC,cAAc,CACxBxB,KAAK,CAAE3C,WAAY,CACnBqE,QAAQ,CAAGC,CAAC,EAAKrE,cAAc,CAACqE,CAAC,CAACC,MAAM,CAAC5B,KAAK,CAAE,CACjD,CAAC,EACC,CAAC,cAENzD,KAAA,QAAKiF,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBpF,IAAA,UAAAoF,QAAA,CAAO,gBAAc,CAAO,CAAC,cAC7BpF,IAAA,UACEmF,SAAS,CAAC,cAAc,CACxBxB,KAAK,CAAEzC,MAAO,CACdmE,QAAQ,CAAGC,CAAC,EAAKnE,SAAS,CAACmE,CAAC,CAACC,MAAM,CAAC5B,KAAK,CAAE,CAC5C,CAAC,EACC,CAAC,cAENzD,KAAA,QAAKiF,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBpF,IAAA,UAAAoF,QAAA,CAAO,aAAW,CAAO,CAAC,cAC1BlF,KAAA,WACEiF,SAAS,CAAC,aAAa,CACvBxB,KAAK,CAAEvC,SAAU,CACjBiE,QAAQ,CAAGC,CAAC,EAAKjE,YAAY,CAACiE,CAAC,CAACC,MAAM,CAAC5B,KAAK,CAAE,CAAAyB,QAAA,eAE9CpF,IAAA,WAAQ2D,KAAK,CAAC,OAAO,CAAAyB,QAAA,CAAC,aAAW,CAAQ,CAAC,cAC1CpF,IAAA,WAAQ2D,KAAK,CAAC,QAAQ,CAAAyB,QAAA,CAAC,cAAY,CAAQ,CAAC,EACtC,CAAC,EACN,CAAC,cAENlF,KAAA,QAAKiF,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBpF,IAAA,UAAAoF,QAAA,CAAO,gBAAc,CAAO,CAAC,CAC5BxE,KAAK,CAACwB,OAAO,CAACoD,GAAG,CAAC,CAAClD,CAAC,CAAEoD,GAAG,gBACxBxF,KAAA,QAAeiF,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC7BpF,IAAA,WAAAoF,QAAA,CAAS9C,CAAC,CAACqD,IAAI,CAAS,CAAC,KAAE,CAACrD,CAAC,CAACC,OAAO,CAACqD,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,KAAG,CAACtD,CAAC,CAACC,OAAO,CAACqD,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAC1E,cAAA5F,IAAA,UACE6F,IAAI,CAAC,MAAM,CACXV,SAAS,CAAC,mBAAmB,CAC7BW,QAAQ,CAAE1E,SAAS,GAAK,OAAQ,CAChCuC,KAAK,CACHvC,SAAS,GAAK,OAAO,CACjBgC,mBAAmB,CAAC,CAAC,CAACd,CAAC,CAACC,OAAO,CAAC,CAChCjB,YAAY,CAACgB,CAAC,CAACC,OAAO,CAC3B,CACD8C,QAAQ,CAAGC,CAAC,EAAK5B,iBAAiB,CAACpB,CAAC,CAACC,OAAO,CAAE+C,CAAC,CAACC,MAAM,CAAC5B,KAAK,CAAE,CAC/D,CAAC,GAZM+B,GAaL,CACN,CAAC,EACC,CAAC,CAELlE,KAAK,eAAIxB,IAAA,MAAGmF,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAE5D,KAAK,CAAI,CAAC,cAEhDxB,IAAA,WAAQmF,SAAS,CAAC,iBAAiB,CAACY,OAAO,CAAElC,YAAa,CAAAuB,QAAA,CAAC,gBAE3D,CAAQ,CAAC,EACT,CACH,EACE,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}