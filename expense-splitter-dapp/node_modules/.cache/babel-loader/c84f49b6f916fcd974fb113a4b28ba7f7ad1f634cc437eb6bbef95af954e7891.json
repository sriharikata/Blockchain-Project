{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katas\\\\BlockChainProject\\\\expense-splitter-dapp\\\\src\\\\components\\\\BalanceDisplay.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getContract } from \"../utils/contract\";\nimport { formatEther } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BalanceDisplay({\n  signer\n}) {\n  _s();\n  const [balance, setBalance] = useState(\"0\");\n  const fetchBalance = async () => {\n    try {\n      const contract = getContract(signer);\n      const bal = await contract.getBalance();\n      setBalance(formatEther(bal));\n    } catch (error) {\n      console.error(\"Failed to fetch balance:\", error);\n    }\n  };\n  useEffect(() => {\n    if (signer) {\n      fetchBalance();\n\n      // Optional: auto-refresh every 10 seconds\n      const interval = setInterval(fetchBalance, 10000);\n      return () => clearInterval(interval);\n    }\n  }, [signer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"\\uD83D\\uDCCA Contract Balance: \", balance, \" ETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(BalanceDisplay, \"kp0uLr6szANXWhdzJnqY2gd7cI4=\");\n_c = BalanceDisplay;\nvar _c;\n$RefreshReg$(_c, \"BalanceDisplay\");","map":{"version":3,"names":["useEffect","useState","getContract","formatEther","jsxDEV","_jsxDEV","BalanceDisplay","signer","_s","balance","setBalance","fetchBalance","contract","bal","getBalance","error","console","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/katas/BlockChainProject/expense-splitter-dapp/src/components/BalanceDisplay.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { getContract } from \"../utils/contract\";\r\nimport { formatEther } from \"ethers\";\r\n\r\nexport default function BalanceDisplay({ signer }) {\r\n    const [balance, setBalance] = useState(\"0\");\r\n\r\n    const fetchBalance = async () => {\r\n        try {\r\n            const contract = getContract(signer);\r\n            const bal = await contract.getBalance();\r\n            setBalance(formatEther(bal));\r\n        } catch (error) {\r\n            console.error(\"Failed to fetch balance:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (signer) {\r\n            fetchBalance();\r\n\r\n            // Optional: auto-refresh every 10 seconds\r\n            const interval = setInterval(fetchBalance, 10000);\r\n            return () => clearInterval(interval);\r\n        }\r\n    }, [signer]);\r\n\r\n    return (\r\n        <div className=\"text-center mt-4\">\r\n            <h4>ðŸ“Š Contract Balance: {balance} ETH</h4>\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,WAAW,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,eAAe,SAASC,cAAcA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,GAAG,CAAC;EAE3C,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMC,QAAQ,GAAGV,WAAW,CAACK,MAAM,CAAC;MACpC,MAAMM,GAAG,GAAG,MAAMD,QAAQ,CAACE,UAAU,CAAC,CAAC;MACvCJ,UAAU,CAACP,WAAW,CAACU,GAAG,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZ,IAAIO,MAAM,EAAE;MACRI,YAAY,CAAC,CAAC;;MAEd;MACA,MAAMM,QAAQ,GAAGC,WAAW,CAACP,YAAY,EAAE,KAAK,CAAC;MACjD,OAAO,MAAMQ,aAAa,CAACF,QAAQ,CAAC;IACxC;EACJ,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;EAEZ,oBACIF,OAAA;IAAKe,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC7BhB,OAAA;MAAAgB,QAAA,GAAI,iCAAqB,EAACZ,OAAO,EAAC,MAAI;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEd;AAACjB,EAAA,CA5BuBF,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}