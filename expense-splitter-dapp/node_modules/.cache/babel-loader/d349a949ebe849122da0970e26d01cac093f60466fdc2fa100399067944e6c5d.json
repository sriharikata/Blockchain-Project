{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katas\\\\BlockChainProject\\\\expense-splitter-dapp\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { BrowserProvider, formatEther } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Navbar({\n  setView,\n  setSigner\n}) {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(\"0\");\n  const connect = async () => {\n    if (window.ethereum) {\n      const provider = new BrowserProvider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = await provider.getSigner();\n      setSigner(signer);\n      const addr = await signer.getAddress();\n      setAccount(addr);\n      const bal = await provider.getBalance(addr);\n      setBalance(formatEther(bal));\n    } else {\n      alert(\"Please install MetaMask\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar navbar-expand-lg navbar-dark navbar-custom py-3 px-4 shadow-sm sticky-top\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"navbar-brand fw-bold text-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-coins me-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), \"Expense Splitter\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex ms-auto gap-3 align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-light btn-sm\",\n        onClick: () => setView(\"home\"),\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-success btn-sm\",\n        onClick: () => setView(\"create\"),\n        children: \"Create Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-primary btn-sm\",\n        onClick: () => setView(\"add\"),\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), account && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-light small\",\n        children: [\"\\uD83D\\uDCB0 \", parseFloat(balance).toFixed(4), \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success btn-sm\",\n        onClick: connect,\n        children: account ? `Connected: ${account.slice(0, 6)}...` : \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Navbar, \"QHd7XJeOn6WicOrXCqTm9jyldCM=\");\n_c = Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["useState","useEffect","BrowserProvider","formatEther","jsxDEV","_jsxDEV","Navbar","setView","setSigner","_s","account","setAccount","balance","setBalance","connect","window","ethereum","provider","send","signer","getSigner","addr","getAddress","bal","getBalance","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","parseFloat","toFixed","slice","_c","$RefreshReg$"],"sources":["C:/Users/katas/BlockChainProject/expense-splitter-dapp/src/components/Navbar.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { BrowserProvider, formatEther } from \"ethers\";\r\n\r\nexport default function Navbar({ setView, setSigner }) {\r\n  const [account, setAccount] = useState(null);\r\n  const [balance, setBalance] = useState(\"0\");\r\n\r\n  const connect = async () => {\r\n    if (window.ethereum) {\r\n      const provider = new BrowserProvider(window.ethereum);\r\n      await provider.send(\"eth_requestAccounts\", []);\r\n      const signer = await provider.getSigner();\r\n      setSigner(signer);\r\n\r\n      const addr = await signer.getAddress();\r\n      setAccount(addr);\r\n\r\n      const bal = await provider.getBalance(addr);\r\n      setBalance(formatEther(bal));\r\n    } else {\r\n      alert(\"Please install MetaMask\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark navbar-custom py-3 px-4 shadow-sm sticky-top\">\r\n      <span className=\"navbar-brand fw-bold text-info\">\r\n        <i className=\"fas fa-coins me-2\"></i>Expense Splitter\r\n      </span>\r\n\r\n      <div className=\"d-flex ms-auto gap-3 align-items-center\">\r\n        <button className=\"btn btn-outline-light btn-sm\" onClick={() => setView(\"home\")}>\r\n          Home\r\n        </button>\r\n        <button className=\"btn btn-outline-success btn-sm\" onClick={() => setView(\"create\")}>\r\n          Create Group\r\n        </button>\r\n        <button className=\"btn btn-outline-primary btn-sm\" onClick={() => setView(\"add\")}>\r\n          Add Expense\r\n        </button>\r\n\r\n        {account && (\r\n          <span className=\"text-light small\">ðŸ’° {parseFloat(balance).toFixed(4)} ETH</span>\r\n        )}\r\n        <button className=\"btn btn-success btn-sm\" onClick={connect}>\r\n          {account ? `Connected: ${account.slice(0, 6)}...` : \"Connect Wallet\"}\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}