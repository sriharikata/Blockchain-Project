{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katas\\\\BlockChainProject\\\\expense-splitter-dapp\\\\src\\\\views\\\\GroupsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getContract } from \"../utils/contract\";\nimport { parseEther } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GroupsPage({\n  signer\n}) {\n  _s();\n  const [address, setAddress] = useState(\"\");\n  const [groups, setGroups] = useState([]);\n  const [balances, setBalances] = useState({}); // groupId => balances\n  const [loading, setLoading] = useState(true);\n\n  // Fetch groups and balances\n  useEffect(() => {\n    const fetchGroupsAndBalances = async () => {\n      try {\n        const addr = await signer.getAddress();\n        setAddress(addr);\n        const res = await fetch(\"http://localhost:5000/api/groups\");\n        const allGroups = await res.json();\n        if (!Array.isArray(allGroups)) {\n          console.error(\"❌ Invalid groups response:\", allGroups);\n          setLoading(false);\n          return;\n        }\n        const myGroups = allGroups.filter(group => group.members.some(m => m.address.toLowerCase() === addr.toLowerCase()));\n        const balanceMap = {};\n        for (let group of myGroups) {\n          try {\n            const balanceRes = await fetch(`http://localhost:5000/api/expenses/group/${group.groupId}/balance`);\n            const groupBalances = await balanceRes.json();\n            balanceMap[group.groupId] = groupBalances;\n            console.log(`📊 Balances for ${group.groupName}:`, groupBalances);\n          } catch (err) {\n            console.warn(`⚠️ Failed to fetch balance for group ${group.groupId}`, err);\n          }\n        }\n        setGroups(myGroups);\n        setBalances(balanceMap);\n      } catch (err) {\n        console.error(\"❌ Error fetching groups or balances:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (signer) fetchGroupsAndBalances();\n  }, [signer]);\n  const handleSettleUp = async (recipient, amountEth) => {\n    try {\n      const contract = getContract(signer);\n      const tx = await contract.settleUp(recipient, {\n        value: parseEther(amountEth.toString())\n      });\n      console.log(\"📤 SettleUp TX sent:\", tx.hash);\n      await tx.wait();\n      alert(\"✅ Settled successfully!\");\n    } catch (err) {\n      console.error(\"❌ Settle Up failed:\", err);\n      alert(\"Settle up failed.\");\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-4\",\n    children: \"Loading your groups...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mb-4\",\n      children: \"\\uD83D\\uDCCB Your Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), groups.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You are not part of any groups yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : groups.map(group => {\n      const groupBalances = balances[group.groupId] || {};\n      const membersMap = Object.fromEntries(group.members.map(m => [m.name, m.address]));\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-4 shadow-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-0\",\n            children: group.groupName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: Object.entries(groupBalances).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted\",\n            children: \"No expenses in this group yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }, this) : Object.entries(groupBalances).map(([name, amount]) => {\n            var _membersMap$name;\n            const isYou = ((_membersMap$name = membersMap[name]) === null || _membersMap$name === void 0 ? void 0 : _membersMap$name.toLowerCase()) === address.toLowerCase();\n            const showSettle = amount < 0 && !isYou;\n            const absAmount = Math.abs(amount).toFixed(4);\n            const recipient = membersMap[name];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between align-items-center mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [isYou ? \"You\" : name, \" \", amount > 0 ? \"are owed\" : \"owe\", \" \", absAmount, \" ETH\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 25\n              }, this), showSettle && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-outline-success\",\n                onClick: () => handleSettleUp(recipient, absAmount),\n                children: \"Settle Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 27\n              }, this)]\n            }, name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)]\n      }, group.groupId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(GroupsPage, \"DM0sr2RLeHgxMJwRDOohVYDdLlU=\");\n_c = GroupsPage;\nvar _c;\n$RefreshReg$(_c, \"GroupsPage\");","map":{"version":3,"names":["React","useEffect","useState","getContract","parseEther","jsxDEV","_jsxDEV","GroupsPage","signer","_s","address","setAddress","groups","setGroups","balances","setBalances","loading","setLoading","fetchGroupsAndBalances","addr","getAddress","res","fetch","allGroups","json","Array","isArray","console","error","myGroups","filter","group","members","some","m","toLowerCase","balanceMap","balanceRes","groupId","groupBalances","log","groupName","err","warn","handleSettleUp","recipient","amountEth","contract","tx","settleUp","value","toString","hash","wait","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","membersMap","Object","fromEntries","name","entries","amount","_membersMap$name","isYou","showSettle","absAmount","Math","abs","toFixed","onClick","_c","$RefreshReg$"],"sources":["C:/Users/katas/BlockChainProject/expense-splitter-dapp/src/views/GroupsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getContract } from \"../utils/contract\";\r\nimport { parseEther } from \"ethers\";\r\n\r\nexport default function GroupsPage({ signer }) {\r\n  const [address, setAddress] = useState(\"\");\r\n  const [groups, setGroups] = useState([]);\r\n  const [balances, setBalances] = useState({}); // groupId => balances\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch groups and balances\r\n  useEffect(() => {\r\n    const fetchGroupsAndBalances = async () => {\r\n      try {\r\n        const addr = await signer.getAddress();\r\n        setAddress(addr);\r\n\r\n        const res = await fetch(\"http://localhost:5000/api/groups\");\r\n        const allGroups = await res.json();\r\n\r\n        if (!Array.isArray(allGroups)) {\r\n          console.error(\"❌ Invalid groups response:\", allGroups);\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        const myGroups = allGroups.filter(group =>\r\n          group.members.some(m =>\r\n            m.address.toLowerCase() === addr.toLowerCase()\r\n          )\r\n        );\r\n\r\n        const balanceMap = {};\r\n\r\n        for (let group of myGroups) {\r\n          try {\r\n            const balanceRes = await fetch(`http://localhost:5000/api/expenses/group/${group.groupId}/balance`);\r\n            const groupBalances = await balanceRes.json();\r\n            balanceMap[group.groupId] = groupBalances;\r\n            console.log(`📊 Balances for ${group.groupName}:`, groupBalances);\r\n          } catch (err) {\r\n            console.warn(`⚠️ Failed to fetch balance for group ${group.groupId}`, err);\r\n          }\r\n        }\r\n\r\n        setGroups(myGroups);\r\n        setBalances(balanceMap);\r\n      } catch (err) {\r\n        console.error(\"❌ Error fetching groups or balances:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (signer) fetchGroupsAndBalances();\r\n  }, [signer]);\r\n\r\n  const handleSettleUp = async (recipient, amountEth) => {\r\n    try {\r\n      const contract = getContract(signer);\r\n      const tx = await contract.settleUp(recipient, {\r\n        value: parseEther(amountEth.toString())\r\n      });\r\n\r\n      console.log(\"📤 SettleUp TX sent:\", tx.hash);\r\n      await tx.wait();\r\n      alert(\"✅ Settled successfully!\");\r\n    } catch (err) {\r\n      console.error(\"❌ Settle Up failed:\", err);\r\n      alert(\"Settle up failed.\");\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center mt-4\">Loading your groups...</div>;\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h3 className=\"mb-4\">📋 Your Groups</h3>\r\n\r\n      {groups.length === 0 ? (\r\n        <p>You are not part of any groups yet.</p>\r\n      ) : (\r\n        groups.map(group => {\r\n          const groupBalances = balances[group.groupId] || {};\r\n          const membersMap = Object.fromEntries(group.members.map(m => [m.name, m.address]));\r\n\r\n          return (\r\n            <div key={group.groupId} className=\"card mb-4 shadow-sm\">\r\n              <div className=\"card-header\">\r\n                <h5 className=\"mb-0\">{group.groupName}</h5>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                {Object.entries(groupBalances).length === 0 ? (\r\n                  <p className=\"text-muted\">No expenses in this group yet.</p>\r\n                ) : (\r\n                  Object.entries(groupBalances).map(([name, amount]) => {\r\n                    const isYou = membersMap[name]?.toLowerCase() === address.toLowerCase();\r\n                    const showSettle = amount < 0 && !isYou;\r\n                    const absAmount = Math.abs(amount).toFixed(4);\r\n                    const recipient = membersMap[name];\r\n\r\n                    return (\r\n                      <div key={name} className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                        <span>\r\n                          {isYou ? \"You\" : name} {amount > 0 ? \"are owed\" : \"owe\"} {absAmount} ETH\r\n                        </span>\r\n                        {showSettle && (\r\n                          <button\r\n                            className=\"btn btn-sm btn-outline-success\"\r\n                            onClick={() => handleSettleUp(recipient, absAmount)}\r\n                          >\r\n                            Settle Up\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  })\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}